sudo: required
dist: trusty
language: cpp
matrix:
  include:
  - os: linux
    compiler: gcc
    language: python
    python: "3.5"
    env: TRAVIS_PYTHON_VERSION="3.5"
  - os: linux
    compiler: clang
    language: python
    python: "3.5"
    env: TRAVIS_PYTHON_VERSION="3.5"
  - os: osx
    compiler: clang
    env: TRAVIS_PYTHON_VERSION="3.6"
  - os: linux
    compiler: clang
    language: python
    python: "3.6"
    env: TRAVIS_PYTHON_VERSION="3.6"
  - os: linux
    compiler: clang
    language: python
    python: "3.7-dev"
    env: TRAVIS_PYTHON_VERSION="3.7"

addons:
  apt:
    sources:
    # - sourceline: 'ppa:mc3man/trusty-media'
    - ubuntu-toolchain-r-test
    packages:
    - clang
    - libboost-dev
    - libgsl0-dev
    # - libhdf5-serial-dev
    # - python-setuptools
    # - python3-setuptools
    - python-dev
    - python3-dev
    - python3
    - python
    - wget
    # - ffmpeg

before_install:
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update;
    brew install gsl ffmpeg hdf5@1.10;
    brew info hdf5;
    ls /usr/local/Cellar/;
    ls /usr/local/Cellar/hdf5;
    cp /usr/local/Cellar/hdf5/1.10.3/include/* /usr/local/include/;
    cp /usr/local/Cellar/hdf5/1.10.3/lib/* /usr/local/lib/;
    brew upgrade python;
    which python3;
    python3 -V
    brew install freetype;
  fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    ls /opt;
    pushd /opt;
    curl -LO https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.4/src/hdf5-1.10.4.tar.bz2;
    tar xf hdf5-1.10.4.tar.bz2;
    cd hdf5-1.10.4;
    ./configure --enable-cxx;
    make;
    make install;
    popd;
    pwd;
  fi

- which python
- python -V

- if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    mkdir ~/local;
    wget https://bootstrap.pypa.io/get-pip.py;
    python get-pip.py;
    python -m pip install -U cython numpy matplotlib jupyter;
  fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    curl -O https://bootstrap.pypa.io/get-pip.py;
    python3 get-pip.py;
    python3 -m pip install -U cython numpy matplotlib jupyter;
  fi

script:
- set -ev
- PYTHON_EXECUTABLE=`which python`
- echo ${PYTHON_EXECUTABLE}
- ls -d /usr/include/python*
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    ls -l /opt/python;
    export PYTHON_LIBRARY=/opt/python/3.5.5/lib;
    export PYTHON_INCLUDE_DIR=/opt/python/3.5.5/include/python3.5m;
    echo ${PYTHON_INCLUDE_DIR};
    bash -c 'wget https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz && tar xf cmake-3.12.1-Linux-x86_64.tar.gz && ./cmake-3.12.1-Linux-x86_64/bin/cmake -DCMAKE_POLICY_DEFAULT_CMP0074=NEW -DHDF5_ROOT=/opt/hdf5-1.10.4/hdf5 -DCMAKE_INSTALL_PREFIX=~/local . && make && make test && make install';
    rm CMakeCache.txt;
  fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    sudo bash -c 'cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_EXECUTABLE:FILEPATH=python3 . && make && make test && make install';
    rm -f CMakeCache.txt;
  fi
- set +e

cache: false
notifications:
  webhooks:
    urls:
    - http://dev.e-cell.org/ecell-bot/travis/notification
  slack:
    secure: kCN8PCrinRfaDFKn93TMrYY5LberBt8GHDHOtSbR7B1Zmo9Pr/uHxxqoXlu1g9XYxgs2lud/AKo0gKMu8n+QHWeAXaOwe8GSccEqBdilXDVp4fzO96jT2R82RYljQ2wAR5ug1YIACRq06mtFn6U7GRZRnpRI4VsEUFLJPljZ+UM=
    slack: ecell-project:LvsPrINO4bNonZNTNw3IqMhV
